services:
  api:
    build: 
      context: ./api
      target: final
    ports:
      - "3000:3000"
    environment:
      DATABASE_CONNECTION_STRING: ${DATABASE_CONNECTION_STRING}
      JWKS_ENDPOINT: http://auth:3001/jwks
    depends_on:
      api-db:
        condition: service_healthy
  auth:
    build:
      context: ./auth
      target: final
    ports:
      - "3001:3001"
    environment:
      DATABASE_CONNECTION_STRING_FILE: /run/secrets/auth_db_connection_string
      USERNAME: keystone
      USER_PASSWORD_FILE: /run/secrets/user_password
    secrets:
      - auth_db_connection_string
      - user_password
    depends_on:
      auth-db:
        condition: service_healthy

  api-db:
    image: postgres:16.3
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: keystone
      POSTGRES_PASSWORD_FILE: /run/secrets/api_db_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - api_db_password
    volumes:
      - api-db-data:/var/lib/postgresql/data

  auth-db:
    image: postgres:16.3
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: keystone
      POSTGRES_PASSWORD_FILE: /run/secrets/auth_db_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - auth_db_password
    volumes:
      - auth-db-data:/var/lib/postgresql/data


volumes:
  api-db-data:
  auth-db-data:

secrets:
  api_db_password:
    file: secrets/api_db_password.txt
  auth_db_password:
    file: secrets/auth_db_password.txt
  auth_db_connection_string:
    file: secrets/auth_db_connection_string.txt
  user_password:
    file: secrets/user_password.txt